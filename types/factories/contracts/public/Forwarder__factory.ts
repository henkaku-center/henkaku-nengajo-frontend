/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Forwarder,
  ForwarderInterface,
} from "../../../contracts/public/Forwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_newAdmins",
        type: "address[]",
      },
    ],
    name: "addAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deleteAdmin",
        type: "address",
      },
    ],
    name: "deleteAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "targetContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "targetMethods",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "method",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "whitelistMethod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "whitelistTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040518060400160405280600981526020017f466f7277617264657200000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620000e88184846200018e60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050806101208181525050505050505060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002a2565b60008383834630604051602001620001ab95949392919062000245565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b620001df81620001ca565b82525050565b6000819050919050565b620001fa81620001e5565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022d8262000200565b9050919050565b6200023f8162000220565b82525050565b600060a0820190506200025c6000830188620001d4565b6200026b6020830187620001d4565b6200027a6040830186620001d4565b620002896060830185620001ef565b62000298608083018462000234565b9695505050505050565b60805160a05160c05160e05161010051610120516120a1620002f26000396000610ecb01526000610f0d01526000610eec01526000610e2101526000610e7701526000610ea001526120a16000f3fe6080604052600436106100915760003560e01c8063997d039111610059578063997d0391146101935780639c54df64146101d0578063bc6d1b4c146101f9578063bf5d3bdb14610236578063e1838f8d1461027357610091565b8063122560541461009657806324d7806c146100bf57806327e1f7df146100fc5780632d0335ab1461012557806347153f8214610162575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906112e7565b61029c565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190611327565b610382565b6040516100f39190611363565b60405180910390f35b34801561010857600080fd5b50610123600480360381019061011e9190611327565b6103d7565b005b34801561013157600080fd5b5061014c60048036038101906101479190611327565b6104bc565b6040516101599190611397565b60405180910390f35b61017c6004803603810190610177919061143b565b610505565b60405161018a929190611547565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190611327565b6106f1565b6040516101c79190611363565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f291906116b5565b610711565b005b34801561020557600080fd5b50610220600480360381019061021b9190611756565b6108c8565b60405161022d9190611363565b60405180910390f35b34801561024257600080fd5b5061025d6004803603810190610258919061143b565b6108f7565b60405161026a9190611363565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190611796565b610c20565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90611846565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990611846565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060606105148585856108f7565b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a906118d8565b60405180910390fd5b600185608001356105649190611927565b6003600087600001602081019061057b9190611327565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906105cf9190611327565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a001906105ff919061196a565b8b60000160208101906106129190611327565b60405160200161062493929190611a54565b6040516020818303038152906040526040516106409190611aaf565b600060405180830381858888f193505050503d806000811461067e576040519150601f19603f3d011682016040523d82523d6000602084013e610683565b606091505b5091509150816106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf90611b38565b60405180910390fd5b603f87606001356106d99190611b87565b5a116106e157fe5b8181935093505050935093915050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079390611846565b60405180910390fd5b600081519050600081116107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611c04565b60405180910390fd5b60005b818110156108c357600083828151811061080557610804611c24565b5b602002602001015190506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108b75760016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b816001019150506107e8565b505050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080610a0084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506109f27fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906109799190611327565b89602001602081019061098c9190611327565b8a604001358b606001358c608001358d8060a001906109ab919061196a565b6040516109b9929190611c53565b60405180910390206040516020016109d79796959493929190611c94565b60405160208183030381529060405280519060200120610d56565b610d7090919063ffffffff16565b90506000856020016020810190610a179190611327565b90506000610a78878060a00190610a2e919061196a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610d97565b9050866080013560036000896000016020810190610a969190611327565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054148015610b1b5750866000016020810190610aec9190611327565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b8015610b705750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8015610c145750600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b93505050509392505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290611846565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000610d69610d63610e1d565b83610f37565b9050919050565b6000806000610d7f8585610f6a565b91509150610d8c81610fbb565b819250505092915050565b6000600482610da69190611927565b83511015610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de090611d4f565b60405180910390fd5b6020820183015190507fffffffff000000000000000000000000000000000000000000000000000000008116905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610e9957507f000000000000000000000000000000000000000000000000000000000000000046145b15610ec6577f00000000000000000000000000000000000000000000000000000000000000009050610f34565b610f317f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611121565b90505b90565b60008282604051602001610f4c929190611de7565b60405160208183030381529060405280519060200120905092915050565b6000806041835103610fab5760008060006020860151925060408601519150606086015160001a9050610f9f8782858561115b565b94509450505050610fb4565b60006002915091505b9250929050565b60006004811115610fcf57610fce611e1e565b5b816004811115610fe257610fe1611e1e565b5b031561111e5760016004811115610ffc57610ffb611e1e565b5b81600481111561100f5761100e611e1e565b5b0361104f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104690611e99565b60405180910390fd5b6002600481111561106357611062611e1e565b5b81600481111561107657611075611e1e565b5b036110b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ad90611f05565b60405180910390fd5b600360048111156110ca576110c9611e1e565b5b8160048111156110dd576110dc611e1e565b5b0361111d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111490611f97565b60405180910390fd5b5b50565b6000838383463060405160200161113c959493929190611fb7565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611196576000600391509150611234565b6000600187878787604051600081526020016040526040516111bb9493929190612026565b6020604051602081039080840390855afa1580156111dd573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361122b57600060019250925050611234565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127c82611251565b9050919050565b61128c81611271565b811461129757600080fd5b50565b6000813590506112a981611283565b92915050565b60008115159050919050565b6112c4816112af565b81146112cf57600080fd5b50565b6000813590506112e1816112bb565b92915050565b600080604083850312156112fe576112fd611247565b5b600061130c8582860161129a565b925050602061131d858286016112d2565b9150509250929050565b60006020828403121561133d5761133c611247565b5b600061134b8482850161129a565b91505092915050565b61135d816112af565b82525050565b60006020820190506113786000830184611354565b92915050565b6000819050919050565b6113918161137e565b82525050565b60006020820190506113ac6000830184611388565b92915050565b600080fd5b600060c082840312156113cd576113cc6113b2565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126113fb576113fa6113d6565b5b8235905067ffffffffffffffff811115611418576114176113db565b5b602083019150836001820283011115611434576114336113e0565b5b9250929050565b60008060006040848603121561145457611453611247565b5b600084013567ffffffffffffffff8111156114725761147161124c565b5b61147e868287016113b7565b935050602084013567ffffffffffffffff81111561149f5761149e61124c565b5b6114ab868287016113e5565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156114f15780820151818401526020810190506114d6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611519826114b7565b61152381856114c2565b93506115338185602086016114d3565b61153c816114fd565b840191505092915050565b600060408201905061155c6000830185611354565b818103602083015261156e818461150e565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115af826114fd565b810181811067ffffffffffffffff821117156115ce576115cd611577565b5b80604052505050565b60006115e161123d565b90506115ed82826115a6565b919050565b600067ffffffffffffffff82111561160d5761160c611577565b5b602082029050602081019050919050565b600061163161162c846115f2565b6115d7565b90508083825260208201905060208402830185811115611654576116536113e0565b5b835b8181101561167d5780611669888261129a565b845260208401935050602081019050611656565b5050509392505050565b600082601f83011261169c5761169b6113d6565b5b81356116ac84826020860161161e565b91505092915050565b6000602082840312156116cb576116ca611247565b5b600082013567ffffffffffffffff8111156116e9576116e861124c565b5b6116f584828501611687565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611733816116fe565b811461173e57600080fd5b50565b6000813590506117508161172a565b92915050565b6000806040838503121561176d5761176c611247565b5b600061177b8582860161129a565b925050602061178c85828601611741565b9150509250929050565b6000806000606084860312156117af576117ae611247565b5b60006117bd8682870161129a565b93505060206117ce86828701611741565b92505060406117df868287016112d2565b9150509250925092565b600082825260208201905092915050565b7f41646d696e73206f6e6c79000000000000000000000000000000000000000000600082015250565b6000611830600b836117e9565b915061183b826117fa565b602082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f466f727761726465723a207369676e617475726520646f6573206e6f74206d6160008201527f7463682072657175657374000000000000000000000000000000000000000000602082015250565b60006118c2602b836117e9565b91506118cd82611866565b604082019050919050565b600060208201905081810360008301526118f1816118b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119328261137e565b915061193d8361137e565b9250828201905080821115611955576119546118f8565b5b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126119875761198661195b565b5b80840192508235915067ffffffffffffffff8211156119a9576119a8611960565b5b6020830192506001820236038313156119c5576119c4611965565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006119f383856119cd565b9350611a008385846119d8565b82840190509392505050565b60008160601b9050919050565b6000611a2482611a0c565b9050919050565b6000611a3682611a19565b9050919050565b611a4e611a4982611271565b611a2b565b82525050565b6000611a618285876119e7565b9150611a6d8284611a3d565b601482019150819050949350505050565b6000611a89826114b7565b611a9381856119cd565b9350611aa38185602086016114d3565b80840191505092915050565b6000611abb8284611a7e565b915081905092915050565b7f466f727761726465723a206661696c656420746f20666f72776172642074726160008201527f6e73616374696f6e000000000000000000000000000000000000000000000000602082015250565b6000611b226028836117e9565b9150611b2d82611ac6565b604082019050919050565b60006020820190508181036000830152611b5181611b15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b928261137e565b9150611b9d8361137e565b925082611bad57611bac611b58565b5b828204905092915050565b7f4e656564206f6e65206f72206d6f7265206e65772061646d696e730000000000600082015250565b6000611bee601b836117e9565b9150611bf982611bb8565b602082019050919050565b60006020820190508181036000830152611c1d81611be1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c608284866119e7565b91508190509392505050565b6000819050919050565b611c7f81611c6c565b82525050565b611c8e81611271565b82525050565b600060e082019050611ca9600083018a611c76565b611cb66020830189611c85565b611cc36040830188611c85565b611cd06060830187611388565b611cdd6080830186611388565b611cea60a0830185611388565b611cf760c0830184611c76565b98975050505050505050565b7f466f727761726465723a206461746120746f6f2073686f727400000000000000600082015250565b6000611d396019836117e9565b9150611d4482611d03565b602082019050919050565b60006020820190508181036000830152611d6881611d2c565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611db0600283611d6f565b9150611dbb82611d7a565b600282019050919050565b6000819050919050565b611de1611ddc82611c6c565b611dc6565b82525050565b6000611df282611da3565b9150611dfe8285611dd0565b602082019150611e0e8284611dd0565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611e836018836117e9565b9150611e8e82611e4d565b602082019050919050565b60006020820190508181036000830152611eb281611e76565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611eef601f836117e9565b9150611efa82611eb9565b602082019050919050565b60006020820190508181036000830152611f1e81611ee2565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f816022836117e9565b9150611f8c82611f25565b604082019050919050565b60006020820190508181036000830152611fb081611f74565b9050919050565b600060a082019050611fcc6000830188611c76565b611fd96020830187611c76565b611fe66040830186611c76565b611ff36060830185611388565b6120006080830184611c85565b9695505050505050565b600060ff82169050919050565b6120208161200a565b82525050565b600060808201905061203b6000830187611c76565b6120486020830186612017565b6120556040830185611c76565b6120626060830184611c76565b9594505050505056fea26469706673582212201169aed2b662a56dff6497bceb342c4239baa117a9de0633db51d5196d77f22f64736f6c63430008110033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  override connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
