/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  HenkakuToken,
  HenkakuTokenInterface,
} from "../../../../../contracts/community/external/henkaku-v2/HenkakuToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addWhitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "addWhitelistUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_of",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeWhitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "removeWhitelistUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setDevAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setGateKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526b033b2e3c9fd0803ce80000006006553480156200002157600080fd5b506040518060400160405280600781526020017f48454e4b414b55000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f48454e4b414b550000000000000000000000000000000000000000000000000081525081600390816200009f91906200043d565b508060049081620000b191906200043d565b505050620000d4620000c8620000f560201b60201c565b620000fd60201b60201c565b6000600960146101000a81548160ff02191690831515021790555062000524565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200024557607f821691505b6020821081036200025b576200025a620001fd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000286565b620002d1868362000286565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200031e620003186200031284620002e9565b620002f3565b620002e9565b9050919050565b6000819050919050565b6200033a83620002fd565b62000352620003498262000325565b84845462000293565b825550505050565b600090565b620003696200035a565b620003768184846200032f565b505050565b5b818110156200039e57620003926000826200035f565b6001810190506200037c565b5050565b601f821115620003ed57620003b78162000261565b620003c28462000276565b81016020851015620003d2578190505b620003ea620003e18562000276565b8301826200037b565b50505b505050565b600082821c905092915050565b60006200041260001984600802620003f2565b1980831691505092915050565b60006200042d8383620003ff565b9150826002028217905092915050565b6200044882620001c3565b67ffffffffffffffff811115620004645762000463620001ce565b5b6200047082546200022c565b6200047d828285620003a2565b600060209050601f831160018114620004b55760008415620004a0578287015190505b620004ac85826200041f565b8655506200051c565b601f198416620004c58662000261565b60005b82811015620004ef57848901518255600182019150602085019450602081019050620004c8565b868310156200050f57848901516200050b601f891682620003ff565b8355505b6001600288020188555050505b505050505050565b612ad880620005346000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063b2e1311111610097578063dd62ed3e11610071578063dd62ed3e14610483578063ed10e33c146104b3578063f2fde38b146104bd578063f4887f15146104d95761018e565b8063b2e131111461041b578063babcc53914610437578063d0d41fe1146104675761018e565b80638da5cb5b1461034557806391cca3db1461036357806395d89b41146103815780639dc29fac1461039f578063a457c2d7146103bb578063a9059cbb146103eb5761018e565b8063395093511161014b578063686b281211610125578063686b2812146102d357806370a08231146102ef578063715018a61461031f57806384083c89146103295761018e565b8063395093511461026957806340c10f191461029957806345d61ded146102b55761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff57806330cc7ae01461022f578063313ce5671461024b575b600080fd5b61019b6104f5565b6040516101a89190611cca565b60405180910390f35b6101cb60048036038101906101c69190611d94565b610587565b6040516101d89190611def565b60405180910390f35b6101e96105aa565b6040516101f69190611e19565b60405180910390f35b61021960048036038101906102149190611e34565b6105b4565b6040516102269190611def565b60405180910390f35b61024960048036038101906102449190611e87565b6105e3565b005b610253610763565b6040516102609190611ed0565b60405180910390f35b610283600480360381019061027e9190611d94565b61076c565b6040516102909190611def565b60405180910390f35b6102b360048036038101906102ae9190611d94565b6107a3565b005b6102bd610810565b6040516102ca9190611efa565b60405180910390f35b6102ed60048036038101906102e8919061205d565b610836565b005b61030960048036038101906103049190611e87565b6109a1565b6040516103169190611e19565b60405180910390f35b6103276109e9565b005b610343600480360381019061033e9190611e87565b6109fd565b005b61034d610b7d565b60405161035a9190611efa565b60405180910390f35b61036b610ba7565b6040516103789190611efa565b60405180910390f35b610389610bcd565b6040516103969190611cca565b60405180910390f35b6103b960048036038101906103b49190611d94565b610c5f565b005b6103d560048036038101906103d09190611d94565b610d18565b6040516103e29190611def565b60405180910390f35b61040560048036038101906104009190611d94565b610d8f565b6040516104129190611def565b60405180910390f35b6104356004803603810190610430919061205d565b610db2565b005b610451600480360381019061044c9190611e87565b610f1d565b60405161045e9190611def565b60405180910390f35b610481600480360381019061047c9190611e87565b610f7b565b005b61049d600480360381019061049891906120a6565b610fc7565b6040516104aa9190611e19565b60405180910390f35b6104bb61104e565b005b6104d760048036038101906104d29190611e87565b611073565b005b6104f360048036038101906104ee9190611e87565b6110f6565b005b60606003805461050490612115565b80601f016020809104026020016040519081016040528092919081815260200182805461053090612115565b801561057d5780601f106105525761010080835404028352916020019161057d565b820191906000526020600020905b81548152906001019060200180831161056057829003601f168201915b5050505050905090565b600080610592611142565b905061059f81858561114a565b600191505092915050565b6000600254905090565b6000806105bf611142565b90506105cc858285611313565b6105d785858561139f565b60019150509392505050565b6105eb610b7d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106715750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806106c95750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90612192565b60405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006012905090565b600080610777611142565b90506107988185856107898589610fc7565b61079391906121e1565b61114a565b600191505092915050565b6107ab611615565b806107b46105aa565b6107be91906121e1565b6006541015610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f990612261565b60405180910390fd5b61080c8282611693565b5050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61083e610b7d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108c45750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061091c5750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290612192565b60405180910390fd5b60005b815181101561099d5761098a82828151811061097d5761097c612281565b5b60200260200101516109fd565b8080610995906122b0565b91505061095e565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109f1611615565b6109fb60006117e9565b565b610a05610b7d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a8b5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610ae35750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1990612192565b60405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054610bdc90612115565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0890612115565b8015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610ccb5750610c9c610b7d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190612344565b60405180910390fd5b610d1482826118af565b5050565b600080610d23611142565b90506000610d318286610fc7565b905083811015610d76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6d906123d6565b60405180910390fd5b610d83828686840361114a565b60019250505092915050565b600080610d9a611142565b9050610da781858561139f565b600191505092915050565b610dba610b7d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e405750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610e985750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece90612192565b60405180910390fd5b60005b8151811015610f1957610f06828281518110610ef957610ef8612281565b5b60200260200101516105e3565b8080610f11906122b0565b915050610eda565b5050565b6000610f27611615565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610f83611615565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611056611615565b6001600960146101000a81548160ff021916908315150217905550565b61107b611615565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e190612468565b60405180910390fd5b6110f3816117e9565b50565b6110fe611615565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b0906124fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f9061258c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516113069190611e19565b60405180910390a3505050565b600061131f8484610fc7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611399578181101561138b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611382906125f8565b60405180910390fd5b611398848484840361114a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114059061268a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114749061271c565b60405180910390fd5b611488838383611a7c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561150e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611505906127ae565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115fc9190611e19565b60405180910390a361160f848484611c35565b50505050565b61161d611142565b73ffffffffffffffffffffffffffffffffffffffff1661163b610b7d565b73ffffffffffffffffffffffffffffffffffffffff1614611691576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116889061281a565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f990612886565b60405180910390fd5b61170e60008383611a7c565b806002600082825461172091906121e1565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117d19190611e19565b60405180910390a36117e560008383611c35565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191590612918565b60405180910390fd5b61192a82600083611a7c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156119b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a7906129aa565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a639190611e19565b60405180910390a3611a7783600084611c35565b505050565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680611ae05750600960149054906101000a900460ff165b80611b175750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b611b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4d90612a16565b60405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680611bba5750600960149054906101000a900460ff165b80611bf15750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b611c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2790612a82565b60405180910390fd5b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c74578082015181840152602081019050611c59565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c9c82611c3a565b611ca68185611c45565b9350611cb6818560208601611c56565b611cbf81611c80565b840191505092915050565b60006020820190508181036000830152611ce48184611c91565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d2b82611d00565b9050919050565b611d3b81611d20565b8114611d4657600080fd5b50565b600081359050611d5881611d32565b92915050565b6000819050919050565b611d7181611d5e565b8114611d7c57600080fd5b50565b600081359050611d8e81611d68565b92915050565b60008060408385031215611dab57611daa611cf6565b5b6000611db985828601611d49565b9250506020611dca85828601611d7f565b9150509250929050565b60008115159050919050565b611de981611dd4565b82525050565b6000602082019050611e046000830184611de0565b92915050565b611e1381611d5e565b82525050565b6000602082019050611e2e6000830184611e0a565b92915050565b600080600060608486031215611e4d57611e4c611cf6565b5b6000611e5b86828701611d49565b9350506020611e6c86828701611d49565b9250506040611e7d86828701611d7f565b9150509250925092565b600060208284031215611e9d57611e9c611cf6565b5b6000611eab84828501611d49565b91505092915050565b600060ff82169050919050565b611eca81611eb4565b82525050565b6000602082019050611ee56000830184611ec1565b92915050565b611ef481611d20565b82525050565b6000602082019050611f0f6000830184611eeb565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5282611c80565b810181811067ffffffffffffffff82111715611f7157611f70611f1a565b5b80604052505050565b6000611f84611cec565b9050611f908282611f49565b919050565b600067ffffffffffffffff821115611fb057611faf611f1a565b5b602082029050602081019050919050565b600080fd5b6000611fd9611fd484611f95565b611f7a565b90508083825260208201905060208402830185811115611ffc57611ffb611fc1565b5b835b8181101561202557806120118882611d49565b845260208401935050602081019050611ffe565b5050509392505050565b600082601f83011261204457612043611f15565b5b8135612054848260208601611fc6565b91505092915050565b60006020828403121561207357612072611cf6565b5b600082013567ffffffffffffffff81111561209157612090611cfb565b5b61209d8482850161202f565b91505092915050565b600080604083850312156120bd576120bc611cf6565b5b60006120cb85828601611d49565b92505060206120dc85828601611d49565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061212d57607f821691505b6020821081036121405761213f6120e6565b5b50919050565b7f494e56414c49443a204f4e4c592041444d494e2043414e204558454355544500600082015250565b600061217c601f83611c45565b915061218782612146565b602082019050919050565b600060208201905081810360008301526121ab8161216f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121ec82611d5e565b91506121f783611d5e565b925082820190508082111561220f5761220e6121b2565b5b92915050565b7f455843454544204d415820535550504c59000000000000000000000000000000600082015250565b600061224b601183611c45565b915061225682612215565b602082019050919050565b6000602082019050818103600083015261227a8161223e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006122bb82611d5e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ed576122ec6121b2565b5b600182019050919050565b7f494e56414c49443a204e4f5420594f5552204153534554000000000000000000600082015250565b600061232e601783611c45565b9150612339826122f8565b602082019050919050565b6000602082019050818103600083015261235d81612321565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006123c0602583611c45565b91506123cb82612364565b604082019050919050565b600060208201905081810360008301526123ef816123b3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612452602683611c45565b915061245d826123f6565b604082019050919050565b6000602082019050818103600083015261248181612445565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006124e4602483611c45565b91506124ef82612488565b604082019050919050565b60006020820190508181036000830152612513816124d7565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612576602283611c45565b91506125818261251a565b604082019050919050565b600060208201905081810360008301526125a581612569565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006125e2601d83611c45565b91506125ed826125ac565b602082019050919050565b60006020820190508181036000830152612611816125d5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612674602583611c45565b915061267f82612618565b604082019050919050565b600060208201905081810360008301526126a381612667565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612706602383611c45565b9150612711826126aa565b604082019050919050565b60006020820190508181036000830152612735816126f9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612798602683611c45565b91506127a38261273c565b604082019050919050565b600060208201905081810360008301526127c78161278b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612804602083611c45565b915061280f826127ce565b602082019050919050565b60006020820190508181036000830152612833816127f7565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612870601f83611c45565b915061287b8261283a565b602082019050919050565b6000602082019050818103600083015261289f81612863565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612902602183611c45565b915061290d826128a6565b604082019050919050565b60006020820190508181036000830152612931816128f5565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612994602283611c45565b915061299f82612938565b604082019050919050565b600060208201905081810360008301526129c381612987565b9050919050565b7f494e56414c49443a2053454e444552204953204e4f5420414c4c4f5745440000600082015250565b6000612a00601e83611c45565b9150612a0b826129ca565b602082019050919050565b60006020820190508181036000830152612a2f816129f3565b9050919050565b7f494e56414c49443a205245434549564552204953204e4f5420414c4c4f574544600082015250565b6000612a6c602083611c45565b9150612a7782612a36565b602082019050919050565b60006020820190508181036000830152612a9b81612a5f565b905091905056fea2646970667358221220383e7be96870e80b0f61e104d9e7bd21b1d8ed7ffc3a8b7d8db43a523d4c638f64736f6c63430008110033";

type HenkakuTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HenkakuTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HenkakuToken__factory extends ContractFactory {
  constructor(...args: HenkakuTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HenkakuToken> {
    return super.deploy(overrides || {}) as Promise<HenkakuToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HenkakuToken {
    return super.attach(address) as HenkakuToken;
  }
  override connect(signer: Signer): HenkakuToken__factory {
    return super.connect(signer) as HenkakuToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HenkakuTokenInterface {
    return new utils.Interface(_abi) as HenkakuTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HenkakuToken {
    return new Contract(address, _abi, signerOrProvider) as HenkakuToken;
  }
}
